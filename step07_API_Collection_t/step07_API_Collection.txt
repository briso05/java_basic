step07_API_Collection

[학습]
1. 제네릭(Generic)
	- 데이터 타입의 일반화
	- 컴파일 시 미리 검사
		1. 객체 타입 안정성 향상
		2. 반환값 확인 및 타입변환과 검사 최소화
	
	- <T> 참조형 타입 기재, 쉼표로 여러개의 타입 변수 사용 가능
	- extends : 타입 변수에 특정 타입만 사용 제한
	- 제네릭 메소드 : 메소드의 선언부에 타입 변수를 사용, 반환 타입 앞에 선언
		public static <T> void 메소드명( ... ) { ... }		
 

2. 컬렉션 프레임워크(Collenction Framework)
	https://docs.oracle.com/javase/tutorial/collections/interfaces/index.html
	- 다수의 데이터를 쉽고 효과적으로 처리 가능하게 하는 클래스 집합
	- 데이터 저장 자료구조에 따른 인터페이스로 구분
		- List<E> : 순서 존재, 데이터 중복 가능
			- ArrayList<E> 클래스
				- 내부 배열을 이용하여 자료 구조 활용
				- 동작 : 배열[]은 크기가 제한, ArrayList는 동적으로 배열 크기 조정
						단, 조정에 의한 속도 저하 가능
			
			- LinkedList<E> 클래스
				- 자료는 비순차적으로 분포
				- 링크(link)로 요소 연결


3. 어노테이션
	- 장식자
		@Override
			- jdk 1.5 추가
			- 재정의 필수, 개발 안성성 부여
		
		@Data
			- lombok library 제공
			- 멤버변수의 get/setXXX 메소드 자동생성, toString()
			
		@NoAargsConstructor
			- 기본 생성자 자동 생성자
			
		@AllArgsConstructor
			- 모든 멤버변수를 인자값으로 갖는 생성자 자동 생성
			
[참고]
https://projectlombok.org/